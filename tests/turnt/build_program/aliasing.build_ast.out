Procedure {
  name: wain
  return_type: int
  parameters: 
    a: int (used)
    b: int (used)
  declarations: 
    c: int* = 1 (used)
  statements: 
    ExprStatement {
      AssignmentExpr {
        lhs: 
          VariableLValueExpr(c) : int*
        rhs: 
          AddressOfExpr {
            VariableLValueExpr(a) : int
          } : int*
      } : int*
    }
    ExprStatement {
      AssignmentExpr {
        lhs: 
          VariableLValueExpr(a) : int
        rhs: 
          69: int
      } : int
    }
    ExprStatement {
      AssignmentExpr {
        lhs: 
          VariableLValueExpr(b) : int
        rhs: 
          DereferenceExpr {
            VariableExpr(c) : int*
          } : int
      } : int
    }
    ExprStatement {
      AssignmentExpr {
        lhs: 
          VariableLValueExpr(a) : int
        rhs: 
          70: int
      } : int
    }
  return_expr: 
    BinaryExpr {
      lhs: 
        VariableExpr(a) : int
      operation: Add
      rhs: 
        VariableExpr(b) : int
    } : int
}

