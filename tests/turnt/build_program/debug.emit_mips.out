                                ; // Simplified C code:
                                ; int wain(int n, int b) {
                                ;   int cont = 1;
                                ;   int i = 0;
                                ;   if (3 < n) {
                                ;   } else {
                                ;     cont = 0;
                                ;     if (n < 4) {
                                ;     } else {
                                ;       cont = 2;
                                ;     }
                                ;   }
                                ;   return cont;
                                ; }
                                ; 
lis $4
.word 4
slt $11, $0, $4                 ; $11 = ($0 < $4) = 1
beq $0, $0, wain                ; Done prologue, jumping to wain
                                ; 
                                ; Generating code for wain
wain:
sw $1, -4($30)                  ;   push $1
sub $30, $30, $4                ;   ^
sw $2, -4($30)                  ;   push $2
sub $30, $30, $4                ;   ^
sub $29, $30, $4
sw $11, -4($30)                 ;   push $11
sub $30, $30, $4                ; Declaration cont
sw $0, -4($30)                  ;   push $0
sub $30, $30, $4                ; Declaration i
                                ; Code for statements:
sub $3, $4, $11                 ; Loading the literal 3
sw $3, -4($30)                  ;   push $3
sub $30, $30, $4                ;   ^
lw $3, 8($29)                   ; Loading n
add $30, $30, $4                ;   pop $5
lw $5, -4($30)                  ;   ^
slt $3, $5, $3
beq $3, $0, ifelse0
beq $0, $0, ifendif0
ifelse0:
                                ; cont = 0;

add $3, $0, $0                  ; Loading the literal 0
sw $3, 0($29)
lw $3, 8($29)                   ; Loading n
sw $3, -4($30)                  ;   push $3
sub $30, $30, $4                ;   ^
add $3, $4, $0                  ; Loading the literal 4
add $30, $30, $4                ;   pop $5
lw $5, -4($30)                  ;   ^
slt $3, $5, $3
beq $3, $0, ifelse1
beq $0, $0, ifendif1
ifelse1:
                                ; cont = 2;

add $3, $11, $11                ; Loading the literal 2
sw $3, 0($29)
ifendif1:
ifendif0:
                                ; Code for return value:
lw $3, 0($29)                   ; Loading cont
jr $31                          ; Done generating code for wain
                                ; Number of assembly instructions: 37
