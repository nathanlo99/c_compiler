                                ; // Simplified C code:
                                ; int wain(int a, int b) {
                                ;   int* null = NULL;
                                ;   int* stdout = 0xffff000c;
                                ;   int almost_nice = 105;
                                ;   int nice = 69;
                                ;   return nice;
                                ; }
                                ; 
lis $4
.word 4
slt $11, $0, $4                 ; $11 = ($0 < $4) = 1
beq $0, $0, wain                ; Done prologue, jumping to wain
                                ; 
                                ; Generating code for wain
wain:
sw $1, -4($30)                  ;   push $1
sub $30, $30, $4                ;   ^
sw $2, -4($30)                  ;   push $2
sub $30, $30, $4                ;   ^
sub $29, $30, $4
sw $11, -4($30)                 ;   push $11
sub $30, $30, $4                ; Declaration null
lis $3
.word 4294901772
sw $3, -4($30)                  ;   push $3
sub $30, $30, $4                ; Declaration stdout
lis $3
.word 105
sw $3, -4($30)                  ;   push $3
sub $30, $30, $4                ; Declaration almost_nice
lis $3
.word 69
sw $3, -4($30)                  ;   push $3
sub $30, $30, $4                ; Declaration nice
                                ; Code for statements:
                                ; Code for return value:
lw $3, -12($29)                 ; Loading nice
jr $31                          ; Done generating code for wain
                                ; Number of assembly instructions: 25
