INT (int)
ID (is_prime)
LPAREN (()
INT (int)
ID (n)
RPAREN ())
LBRACE ({)
INT (int)
ID (i)
BECOMES (=)
NUM (2)
SEMI (;)
INT (int)
ID (answer)
BECOMES (=)
NUM (1)
SEMI (;)
INT (int)
ID (continueLooping)
BECOMES (=)
NUM (1)
SEMI (;)
IF (if)
LPAREN (()
ID (n)
LE (<=)
NUM (3)
RPAREN ())
LBRACE ({)
ID (continueLooping)
BECOMES (=)
NUM (0)
SEMI (;)
RBRACE (})
WHILE (while)
LPAREN (()
ID (continueLooping)
NE (!=)
NUM (0)
RPAREN ())
LBRACE ({)
IF (if)
LPAREN (()
ID (n)
PCT (%)
ID (i)
EQ (==)
NUM (0)
RPAREN ())
LBRACE ({)
ID (answer)
BECOMES (=)
NUM (0)
SEMI (;)
RBRACE (})
ID (i)
BECOMES (=)
ID (i)
PLUS (+)
NUM (1)
SEMI (;)
IF (if)
LPAREN (()
ID (i)
STAR (*)
ID (i)
GT (>)
ID (n)
RPAREN ())
LBRACE ({)
ID (continueLooping)
BECOMES (=)
NUM (0)
SEMI (;)
RBRACE (})
ELSE (else)
LBRACE ({)
IF (if)
LPAREN (()
ID (answer)
EQ (==)
NUM (0)
RPAREN ())
LBRACE ({)
ID (continueLooping)
BECOMES (=)
NUM (0)
SEMI (;)
RBRACE (})
RBRACE (})
RBRACE (})
RETURN (return)
ID (answer)
SEMI (;)
RBRACE (})
INT (int)
ID (collatz)
LPAREN (()
INT (int)
STAR (*)
ID (num)
RPAREN ())
LBRACE ({)
INT (int)
ID (value)
BECOMES (=)
NUM (0)
SEMI (;)
ID (value)
BECOMES (=)
STAR (*)
ID (num)
SEMI (;)
IF (if)
LPAREN (()
ID (value)
GE (>=)
NUM (2)
RPAREN ())
LBRACE ({)
IF (if)
LPAREN (()
ID (value)
PCT (%)
NUM (2)
NE (!=)
NUM (0)
RPAREN ())
LBRACE ({)
STAR (*)
ID (num)
BECOMES (=)
NUM (3)
STAR (*)
ID (value)
PLUS (+)
NUM (2)
MINUS (-)
NUM (1)
SEMI (;)
RBRACE (})
ELSE (else)
LBRACE ({)
STAR (*)
ID (num)
BECOMES (=)
ID (value)
SLASH (/)
NUM (2)
SEMI (;)
RBRACE (})
RBRACE (})
ELSE (else)
LBRACE ({)
STAR (*)
ID (num)
BECOMES (=)
NUM (1)
SEMI (;)
RBRACE (})
RETURN (return)
NUM (0)
SEMI (;)
RBRACE (})
INT (int)
WAIN (wain)
LPAREN (()
INT (int)
ID (startNumber)
COMMA (,)
INT (int)
ID (numPrimes)
RPAREN ())
LBRACE ({)
INT (int)
STAR (*)
ID (result)
BECOMES (=)
NULL (NULL)
SEMI (;)
INT (int)
ID (idx)
BECOMES (=)
NUM (0)
SEMI (;)
INT (int)
ID (nextNumber)
BECOMES (=)
NUM (0)
SEMI (;)
ID (result)
BECOMES (=)
NEW (new)
INT (int)
LBRACK ([)
ID (numPrimes)
RBRACK (])
SEMI (;)
ID (nextNumber)
BECOMES (=)
ID (startNumber)
SEMI (;)
WHILE (while)
LPAREN (()
ID (idx)
LT (<)
ID (numPrimes)
RPAREN ())
LBRACE ({)
WHILE (while)
LPAREN (()
ID (is_prime)
LPAREN (()
ID (nextNumber)
RPAREN ())
EQ (==)
NUM (0)
RPAREN ())
LBRACE ({)
ID (nextNumber)
BECOMES (=)
ID (nextNumber)
PLUS (+)
NUM (1)
SEMI (;)
RBRACE (})
STAR (*)
LPAREN (()
ID (result)
PLUS (+)
ID (idx)
RPAREN ())
BECOMES (=)
ID (nextNumber)
SEMI (;)
ID (nextNumber)
BECOMES (=)
ID (nextNumber)
PLUS (+)
NUM (1)
SEMI (;)
ID (idx)
BECOMES (=)
ID (idx)
PLUS (+)
NUM (1)
SEMI (;)
RBRACE (})
ID (idx)
BECOMES (=)
NUM (0)
SEMI (;)
WHILE (while)
LPAREN (()
ID (idx)
LT (<)
ID (numPrimes)
RPAREN ())
LBRACE ({)
PRINTLN (println)
LPAREN (()
STAR (*)
LPAREN (()
ID (result)
PLUS (+)
ID (idx)
RPAREN ())
RPAREN ())
SEMI (;)
ID (idx)
BECOMES (=)
ID (idx)
PLUS (+)
NUM (1)
SEMI (;)
RBRACE (})
ID (nextNumber)
BECOMES (=)
NUM (40)
SEMI (;)
WHILE (while)
LPAREN (()
ID (nextNumber)
NE (!=)
NUM (1)
RPAREN ())
LBRACE ({)
PRINTLN (println)
LPAREN (()
ID (nextNumber)
RPAREN ())
SEMI (;)
ID (idx)
BECOMES (=)
ID (collatz)
LPAREN (()
AMP (&)
ID (nextNumber)
RPAREN ())
SEMI (;)
RBRACE (})
DELETE (delete)
LBRACK ([)
RBRACK (])
ID (result)
SEMI (;)
RETURN (return)
NUM (0)
SEMI (;)
RBRACE (})
