Procedure {
  name: wain
  return_type: int
  parameters: 
    n: int (used)
    b: int (unused)
  declarations: 
    cont: int = 1 (used)
    i: int = 0 (unused)
  statements: 
    IfStatement {
      condition: 
        BinaryExpr {
          lhs: 
            3: int
          operation: LessThan
          rhs: 
            VariableExpr(n) : int
        } : int
      true_statement: 
      false_statement: 
        ExprStatement {
          AssignmentExpr {
            lhs: 
              VariableLValueExpr(cont) : int
            rhs: 
              0: int
          } : int
        }
        IfStatement {
          condition: 
            BinaryExpr {
              lhs: 
                VariableExpr(n) : int
              operation: LessThan
              rhs: 
                4: int
            } : int
          true_statement: 
          false_statement: 
            ExprStatement {
              AssignmentExpr {
                lhs: 
                  VariableLValueExpr(cont) : int
                rhs: 
                  2: int
              } : int
            }
        }
    }
  return_expr: 
    VariableExpr(cont) : int
}

