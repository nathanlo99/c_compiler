Procedure {
  name: wain
  return_type: int
  parameters: 
    a: int (used)
    b: int (used)
  declarations: 
    i: int = 0 (used)
    ptr: int* = 1 (used)
  statements: 
    WhileStatement {
      condition: 
        BinaryExpr {
          lhs: 
            VariableExpr(i) : int
          operation: LessThan
          rhs: 
            VariableExpr(a) : int
        } : int
      body: 
        ExprStatement {
          AssignmentExpr {
            lhs: 
              VariableLValueExpr(ptr) : int*
            rhs: 
              NewExpr {
                VariableExpr(b) : int
              } : int*
          } : int*
        }
        ExprStatement {
          AssignmentExpr {
            lhs: 
              VariableLValueExpr(i) : int
            rhs: 
              BinaryExpr {
                lhs: 
                  VariableExpr(i) : int
                operation: Add
                rhs: 
                  1: int
              } : int
          } : int
        }
    }
  return_expr: 
    0: int
}

