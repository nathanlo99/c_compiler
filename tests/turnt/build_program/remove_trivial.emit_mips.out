                                ; // Simplified C code:
                                ; int wain(int a, int b) {
                                ;   int c = 0;
                                ;   if (a == b) {
                                ;     c = 0;
                                ;   } else {
                                ;   }
                                ;   return c;
                                ; }
                                ; 
lis $4
.word 4
slt $11, $0, $4                 ; $11 = ($0 < $4) = 1
beq $0, $0, wain                ; Done prologue, jumping to wain
                                ; 
                                ; Generating code for wain
wain:
sw $1, -4($30)                  ;   push $1
sub $30, $30, $4                ;   ^
sw $2, -4($30)                  ;   push $2
sub $30, $30, $4                ;   ^
sub $29, $30, $4
sw $0, -4($30)                  ;   push $0
sub $30, $30, $4                ; Declaration c
                                ; Code for statements:
lw $3, 8($29)                   ; Loading a
sw $3, -4($30)                  ;   push $3
sub $30, $30, $4                ;   ^
lw $3, 4($29)                   ; Loading b
add $30, $30, $4                ;   pop $5
lw $5, -4($30)                  ;   ^
slt $6, $3, $5
slt $7, $5, $3
add $3, $6, $7
sub $3, $11, $3
beq $3, $0, ifelse0
                                ; c = 0;

add $3, $0, $0                  ; Loading the literal 0
sw $3, 0($29)
beq $0, $0, ifendif0
ifelse0:
ifendif0:
                                ; Code for return value:
lw $3, 0($29)                   ; Loading c
jr $31                          ; Done generating code for wain
                                ; Number of assembly instructions: 27
