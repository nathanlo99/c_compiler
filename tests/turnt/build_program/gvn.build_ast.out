Procedure {
  name: wain
  return_type: int
  parameters: 
    a: int (used)
    b: int (used)
  declarations: 
    c: int = 5 (used)
    d: int = 0 (used)
  statements: 
    IfStatement {
      condition: 
        TestExpr {
          lhs: 
            VariableExpr(a) : int
          operation: LessThan
          rhs: 
            VariableExpr(b) : int
        }
      true_statement: 
        IfStatement {
          condition: 
            TestExpr {
              lhs: 
                VariableExpr(a) : int
              operation: LessThan
              rhs: 
                VariableExpr(b) : int
            }
          true_statement: 
            ExprStatement {
              AssignmentExpr {
                lhs: 
                  VariableLValueExpr(c) : int
                rhs: 
                  BinaryExpr {
                    lhs: 
                      0: int
                    operation: Sub
                    rhs: 
                      5: int
                  } : int
              } : int
            }
          false_statement: 
        }
        ExprStatement {
          AssignmentExpr {
            lhs: 
              VariableLValueExpr(a) : int
            rhs: 
              BinaryExpr {
                lhs: 
                  VariableExpr(d) : int
                operation: Sub
                rhs: 
                  VariableExpr(c) : int
              } : int
          } : int
        }
      false_statement: 
        ExprStatement {
          AssignmentExpr {
            lhs: 
              VariableLValueExpr(a) : int
            rhs: 
              BinaryExpr {
                lhs: 
                  VariableExpr(c) : int
                operation: Sub
                rhs: 
                  VariableExpr(d) : int
              } : int
          } : int
        }
    }
  return_expr: 
    VariableExpr(a) : int
}

